Apologies for the confusion. I'll now list each question and provide a detailed step-by-step guide for each of the 26 questions from your activity document based on **Module 5: Case Study – HackMe Inc.**.

### **1. What are the BSSID and SSID of the WAP of interest?**

- **Answer**: 
  - Open `wlan.pcap` in **Wireshark**.
  - Apply the following filter to find beacon frames: `wlan.fc.type_subtype == 0x08`.
  - The **BSSID** will be displayed in the Beacon frames. The **SSID** can be found within the "Tag: SSID Parameter Set" in the frame details.
  - **Capture a screenshot** of your result.

### **2. Is the WAP of interest using encryption?**

- **Answer**:
  - Apply the filter: `wlan.fc.type_subtype == 0x20`.
  - Check if the **"Protected bit"** is set, which indicates encryption.
  - **Capture a screenshot** showing the encrypted frames.

### **3. What stations are interacting with the WAP and/or other stations on the WLAN?**

- **Answer**:
  - Use this filter to find stations associated with the WAP: `wlan.fc.type_subtype == 0x01 && wlan_mgt.fixed.status_code == 0x0000`.
  - This filter shows successful associations. The MAC addresses of stations will be displayed as the source.
  - **Capture a screenshot** of the result.

### **4. Are there patterns of activity that seem anomalous?**

- **Answer**:
  - Check for unusual data traffic by using a filter like: `wlan.fc.type_subtype == 0x20 && wlan.fc.protected == 1`.
  - Look for excessive broadcast traffic or repeated authentication requests.
  - **Capture a screenshot** of any anomalous activity (e.g., repeated broadcasts or authentication failures).

### **5. How are they anomalous: Consistent with malfunction? Consistent with maliciousness?**

- **Answer**:
  - Use a timeline of packets by inspecting the timestamps in the **frame details**.
  - Check for repeated failed authentication or a large number of broadcast frames, which may indicate a **denial of service attack** or **WEP-cracking** attempts.
  - **Capture a screenshot** that demonstrates anomalous behavior.

### **6. Can we identify any potentially bad actors?**

- **Answer**:
  - Use `tshark` or **Wireshark** to analyze the source of unusual activity. Use this command to list the top sources:
    ```bash
    tshark -r wlan.pcap -T fields -e wlan.sa | sort | uniq -c | sort -nr
    ```
  - **Capture a screenshot** and identify MAC addresses that show suspicious traffic volumes.

### **7. Can we determine if a bad actor successfully executed an attack?**

- **Answer**:
  - Check for successful **association** or **authentication** by potential bad actors. You can filter the traffic:
    ```bash
    wlan.fc.type_subtype == 0x01 && wlan_mgt.fixed.status_code == 0x0000
    ```
  - Check if the MAC address associated suspiciously.
  - **Capture a screenshot** showing the attack attempt.

### **8. How many WAPs sent Beacon or Probe Response frames in the packet capture?**

- **Answer**:
  - Use the following command to count the number of WAPs:
    ```bash
    tshark -r wlan.pcap -Y '((wlan.fc.type_subtype == 0x08 || wlan.fc.type_subtype == 0x05) && (wlan_mgt.fixed.capabilities.ess == 1) && (wlan_mgt.fixed.capabilities.ibss == 0))' -T fields -e wlan.bssid | uniq -c
    ```
  - **Capture a screenshot** of the result.

### **9. What is the SSID of the WAP of interest?**

- **Answer**:
  - Apply the Wireshark filter: `wlan.fc.type_subtype == 0x08`.
  - The **SSID** will be found in the Beacon frame in the "SSID parameter set" tag.
  - **Capture a screenshot** showing the SSID.

### **10. On which channel is the WAP operating?**

- **Answer**:
  - In the **Beacon frame**, look for the "DS Parameter set: Current Channel" field under frame details.
  - **Capture a screenshot** showing the channel information.

### **11. How many data frames are there?**

- **Answer**:
  - Use **tcpdump** to count data frames:
    ```bash
    tcpdump -nne -r wlan.pcap 'wlan[0] == 0x08' | wc -l
    ```
  - **Capture a screenshot** showing the total number of data frames.

### **12. How many frames have the protected bit set?**

- **Answer**:
  - Use **tcpdump** to count frames with the protected bit set:
    ```bash
    tcpdump -nne -r wlan.pcap 'wlan[0] == 0x08 and wlan[1] & 0x40 == 0x40' | wc -l
    ```
  - **Capture a screenshot** showing the result.

### **13. Were any of the frames sent to a broadcast address?**

- **Answer**:
  - Use **Wireshark** to filter for frames sent to the broadcast address: `ff:ff:ff:ff:ff:ff`.
  - **Capture a screenshot** showing frames sent to the broadcast address.

### **14. How many stations associated with the WAP?**

- **Answer**:
  - Use **Wireshark** to filter for association responses:
    ```bash
    wlan.fc.type_subtype == 0x01 && wlan_mgt.fixed.status_code == 0x0000
    ```
  - **Capture a screenshot** showing the number of associated stations.

### **15. What stations successfully associated with the WAP?**

- **Answer**:
  - The above filter also shows which stations successfully associated (from the source MAC).
  - **Capture a screenshot** showing the associated stations.

### **16. Are there any stations that seem to be interacting with the WAP more than others?**

- **Answer**:
  - Use **tshark** to count data frames sent from each station:
    ```bash
    tshark -r wlan.pcap -R 'wlan.fc.type_subtype == 0x20 && wlan.fc.protected == 1' -T fields -e wlan.sa | sort | uniq -c | sort -nr
    ```
  - **Capture a screenshot** showing the top interacting stations.

### **17. What stations are sending encrypted data frames?**

- **Answer**:
  - Filter encrypted frames in Wireshark: `wlan.fc.protected == 1`.
  - **Capture a screenshot** showing the stations sending encrypted data frames.

### **18. Are there stations sending data frames to the broadcast address?**

- **Answer**:
  - Apply the filter `wlan.da == ff:ff:ff:ff:ff:ff` in **Wireshark**.
  - **Capture a screenshot** showing stations sending to the broadcast address.

### **19. How many encrypted data frames are coming from each station?**

- **Answer**:
  - Use **tshark** to count encrypted data frames by source:
    ```bash
    tshark -r wlan.pcap -R 'wlan.fc.protected == 1' -T fields -e wlan.sa | sort | uniq -c | sort -nr
    ```
  - **Capture a screenshot** showing encrypted data frame counts by station.

### **20. What stations are sending the highest volume of traffic?**

- **Answer**:
  - Use **tshark** to count total traffic from each station:
    ```bash
    tshark -r wlan.pcap -T fields -e wlan.sa | sort | uniq -c | sort -nr
    ```
  - **Capture a screenshot** showing the highest traffic stations.

### **21. Are there any stations that seem to be sending a high number of authentication or association requests?**

- **Answer**:
  - Filter for authentication and association requests in **Wireshark** using the following filter:
    ```bash
    wlan.fc.type_subtype == 0x0b || wlan.fc.type_subtype == 0x00
    ```
  - **Capture a screenshot** of stations with high numbers of these requests.

### **22. What management frame subtypes are being sent from the WAP’s BSSID?**

- **Answer**:
  - Use **tshark** to filter for management frames:
    ```bash
    tshark -r wlan.pcap -R 'wlan.fc.type == 0 && wlan.bssid == xx:xx:xx:xx:xx:xx' -T fields -e wlan.fc.subtype | sort | uniq -c | sort -nr
    ```
  - **Capture a screenshot** showing management frame subtypes.

### **23. Is there a high number of deauthentication or disassociation messages?**

- **Answer**:
  - Apply this filter in **Wireshark**:
    ```bash
    wlan.fc.type_subtype == 0x0a || wlan.fc.type_subtype == 0x0c
    ```
  - **Capture a screenshot** showing the deauthentication/disassociation messages.

### **24. What time period does the packet capture cover?**

-
